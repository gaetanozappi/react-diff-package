{"version":3,"sources":["function.js","page/Package.js","page/Error.js","App.js","serviceWorker.js","index.js"],"names":["className","args","join","Dropzone","multiple","onOperation","onDelete","isUpload","upload","useState","myFile","setMyFile","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","file","map","key","Chip","icon","AttachFile","label","path","size","color","style","cursor","length","backgroundColor","Package","darkState","classes","makeStyles","theme","root","margin","spacing","width","title","textShadow","useStyles","React","original","originalJson","JSON","parse","last","lastJson","updateVersion","updateNumber","fileName","outputFormat","submitCheck","open","typeInstall","dependencies","message","severity","state","setState","convert","value","replace","replaceAll","handleToggle","param","isNull","event","prev","handleState","enc","TextDecoder","reader","FileReader","onabort","console","log","onerror","onload","dec","decode","result","v","stringify","readAsArrayBuffer","ToggleButtonGroup","exclusive","onChange","aria-label","ToggleButton","Button","variant","onClick","obj","e","isObject","c","modules","Object","keys","el","includes","Promise","all","url","fetch","then","resp","json","modul","a","collected","metadata","name","version","t","val","values","filter","vv","catch","err","placeholder","mode","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","KeyboardArrowRight","borderRadius","content","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","options","originalFileName","updatedFileName","past","current","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","Error","Typography","paragraph","App","props","pathname","useLocation","display","toolbar","mixins","flexGrow","padding","darkTheme","createMuiTheme","palette","type","primary","main","blue","secondary","routeObj","useTheme","ThemeProvider","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ef47dce9.chunk.js","sourcesContent":["const className = (...args) => args.join(' ');\nexport { className };\n","import React, { useCallback, useState } from 'react';\nimport { Button, Chip, Snackbar } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton, Alert } from \"@material-ui/lab\";\nimport { AttachFile, KeyboardArrowRight } from '@material-ui/icons';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { className } from \"../function\";\nimport { ReactGhLikeDiff } from \"react-gh-like-diff\";\nimport AceEditor from \"react-ace\";\nimport { useDropzone } from 'react-dropzone';\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\nimport \"react-gh-like-diff/dist/css/diff2html.min.css\";\nimport \"../styles/main.css\";\nimport \"../styles/styles.css\";\n\nfunction Dropzone({ multiple = false, onOperation, onDelete, upload, isUpload }) {\n  const [myFile, setMyFile] = useState([]);\n  const onDrop = useCallback(\n    acceptedFiles => {\n      setMyFile([...acceptedFiles]);\n      onOperation(acceptedFiles);\n    },\n    [myFile, onOperation]\n  );\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop\n  });\n  const removeAll = () => setMyFile([]);\n  const file = myFile.map((file, key) => (\n    <Chip\n      key={key}\n      icon={<AttachFile />}\n      label={`${file.path} - ${file.size} bytes`}\n      color=\"primary\"\n      onDelete={() => {\n        removeAll();\n        onDelete();\n      }}\n      style={{ cursor: 'pointer' }}\n    />\n  ));\n\n  const label = !isUpload ? 'Select Package.json' : 'Drag';\n\n  return (\n    <>\n      <span {...getRootProps({ className: 'drop-zone2' })}>\n        <input {...getInputProps()} multiple={multiple} />\n        {file.length > 0 ? (\n          file\n        ) : (\n            <Chip\n              icon={<AttachFile />}\n              label={label}\n              color=\"primary\"\n              style={{ cursor: 'pointer', backgroundColor: !isUpload ? '#ccc' : '' }}\n            />\n          )}\n      </span>\n    </>\n  );\n}\n\nexport default function Package({ darkState }) {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"25ch\"\n      }\n    },\n    title: {\n      color: darkState ? \"#ffffff\" : \"#343a40\",\n      textShadow: `3px 3px 2px ${darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"}`\n    }\n  }));\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    original: '{\\n}',\n    originalJson: JSON.parse('{\\n}'),\n    last: \"\",\n    lastJson: \"\",\n    updateVersion: \"\",\n    updateNumber: 0,\n\n    fileName: 'Package.json',\n    outputFormat: 'side-by-side',\n    submitCheck: false,\n\n    open: false,\n    typeInstall: 'yarn',\n    isUpload: false,\n    dependencies: 'dependencies',\n\n    message: \"Copied to clipboard!\",\n    severity: \"success\"\n  });\n\n  const {\n    original,\n    originalJson,\n    last,\n    lastJson,\n    updateVersion,\n    updateNumber,\n    fileName,\n    outputFormat,\n    submitCheck,\n\n    open,\n    typeInstall,\n    isUpload,\n    dependencies,\n\n    message,\n    severity\n  } = state;\n\n  const handleChange = value => {\n    setState((prev) => ({ ...prev, original: value }));\n  };\n\n  const clear = () => {\n    let v = convert(original);\n    setState((prev) => ({ ...prev, original: v }));\n  };\n\n  const convert = (value) => {\n    let a = value\n      .replace(\"[\", \"\")\n      .replace(\"]\", \"\")\n      .replaceAll(\"{\", \"\")\n      .replaceAll(\"}\", \"\")\n      .replaceAll(\": \", \":\")\n      .replaceAll(\"^\", \"\")\n      .replaceAll(\",\", \",\\n\")\n      .replace(/ +/g, \"\")\n      .replaceAll(/\\n\\s*\\n/g, \"\\n\");\n\n    return (\"{\\n\" + a + \"\\n}\")\n      .replace(\"{\\n\\n\", \"{\\n\")\n      .replace(\"\\n\\n}\", \"\\n}\")\n      .replace('\",\\n}', '\"\\n}');\n  };\n\n  const isObject = obj => {\n    try {\n      JSON.parse(obj);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  const submit = () => {\n    if (!isObject(original)) {\n      handleState(true, \"Invalid Json!\", \"error\");\n      return;\n    }\n    let c = JSON.parse(original);\n    let modules = Object.keys(c).map((el) => {\n      if (el.includes(\"@\")) el = el.replace(\"@\", \"%40\")\n      if (el.includes(\"/\")) el = el.replace(\"/\", \"%2F\")\n      console.log(el, el.includes(\"@\"), el.includes(\"/\"))\n      return el;\n    });\n    Promise.all(\n      modules.map((url) =>\n        fetch(\"https://api.npms.io/v2/package/\" + url).then((resp) =>\n          resp.json()\n        )\n      )\n    )\n      .then((modul) => {\n        let a = modul.map(({ collected: { metadata: { name, version } } }) => ({\n          [name]: version\n        }));\n        let v = convert(JSON.stringify(a));\n        let originalJson = JSON.parse(original);\n\n        let t = a\n          .map((el, key) => {\n            let val = Object.values(originalJson)[key];\n            console.log(val)\n            if (val.includes(\"^\")) val = val.replace(\"^\", \"\")\n\n            return Object.values(el)[0] !== val\n              ? Object.keys(el)[0]\n              : \"\";\n          })\n          .filter((e) => e !== \"\");\n\n        let vv = convert(original);\n        setState((prev) => ({\n          ...prev,\n          submitCheck: true,\n          original: vv,\n          originalJson: JSON.parse(vv),\n          last: v,\n          lastJson: a,\n          updateVersion: t.join(\" \"),\n          updateNumber: t.length\n        }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleToggle = (param, isNull = false) => (event, value) => {\n    if ((isNull && value === null) || value !== null)\n      setState((prev) => ({\n        ...prev,\n        [param]: value\n      }));\n  };\n\n  const handleState = (open, message, severity) =>\n    setState((prev) => ({\n      ...prev,\n      open,\n      message,\n      severity\n    }));\n\n  const copyToClipboard = (content) => {\n    const el = document.createElement('textarea');\n    el.value = content;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  const copy = () => {\n    handleState(true, \"Copied to clipboard!\",\n      \"success\");\n    let a = typeInstall === \"yarn\" ? \"yarn add \" : \"npm i \";\n    copyToClipboard(a + updateVersion)\n  }\n\n  const onDrop = file => {\n    var enc = new TextDecoder(\"utf-8\");\n    const reader = new FileReader();//dependencies\n    reader.onabort = () => console.log('file reading was aborted');\n    reader.onerror = () => console.log('file reading has failed');\n    reader.onload = () => {\n      let dec = enc.decode(reader.result);\n      let parse = JSON.parse(dec)[dependencies]\n      let v = convert(JSON.stringify(parse));\n      setState(prev => ({\n        ...prev,\n        original: v,\n        originalJson: parse,\n        isUpload: true\n      }));\n    };\n    reader.readAsArrayBuffer(file[0]);\n  };\n\n  return (\n    <>\n      <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>\n        Diff <span className=\"text-primary\">Package</span>\n      </h1>\n      <div className=\"text-right\">\n        {dependencies !== null && <Dropzone\n          onOperation={onDrop}\n          multiple={false}\n          onDelete={() => {\n            setState(prev => ({\n              ...prev,\n              original: '',\n              isUpload: false\n            }));\n          }}\n          upload={original}\n        />}\n        <ToggleButtonGroup\n          value={dependencies}\n          exclusive\n          onChange={handleToggle('dependencies', true)}\n          aria-label=\"format\"\n          size=\"small\"\n          className=\"m-2\"\n        >\n          <ToggleButton value=\"dependencies\" aria-label=\"npm\">\n            <span className=\"text-xs font-black capitalize\">dependencies</span>\n          </ToggleButton>\n          <ToggleButton value=\"devDependencies\" aria-label=\"yarn\">\n            <span className=\"text-xs font-black capitalize\">devDependencies</span>\n          </ToggleButton>\n        </ToggleButtonGroup>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={submit}\n          style={{ margin: 2 }}\n        >\n          Check\n              </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={clear}\n          style={{ margin: 2 }}\n        >\n          Clear\n              </Button>\n      </div>\n\n      <div className={className(\"rounded p-1\")} style={{ backgroundColor: \"#02313f\" }}>\n        <AceEditor\n          placeholder=\"\"\n          mode=\"json\"\n          theme=\"solarized_dark\"\n          name=\"editor\"\n          onChange={handleChange}\n          fontSize={14}\n          showPrintMargin={true}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={original}\n          setOptions={{\n            showLineNumbers: true,\n            tabSize: 2\n          }} />\n      </div>\n      <br />\n      {submitCheck && (\n        <>\n          <div className=\"text-right\">\n            <Chip label={typeInstall === 'yarn' ? \"yarn add\" : \"npm i\"} icon={<KeyboardArrowRight />} variant=\"outlined\" color=\"primary\" style={{ borderRadius: \"0.25rem\", cursor: \"pointer\" }} onClick={copy} />\n            <ToggleButtonGroup\n              value={typeInstall}\n              exclusive\n              onChange={handleToggle('typeInstall')}\n              aria-label=\"format\"\n              size=\"small\"\n              className=\"m-2\"\n            >\n              <ToggleButton value=\"npm\" aria-label=\"npm\">\n                <span className=\"text-xs font-black capitalize\">Npm</span>\n              </ToggleButton>\n              <ToggleButton value=\"yarn\" aria-label=\"yarn\">\n                <span className=\"text-xs font-black capitalize\">Yarn</span>\n              </ToggleButton>\n            </ToggleButtonGroup>\n            <ToggleButtonGroup\n              value={outputFormat}\n              exclusive\n              onChange={handleToggle('outputFormat')}\n              aria-label=\"format\"\n              size=\"small\"\n            >\n              <ToggleButton value=\"line-by-line\" aria-label=\"unified\">\n                <span className=\"text-xs font-black capitalize\">Unified</span>\n              </ToggleButton>\n              <ToggleButton value=\"side-by-side\" aria-label=\"split\">\n                <span className=\"text-xs font-black capitalize\">Split</span>\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </div>\n          <ReactGhLikeDiff\n            options={{\n              originalFileName: fileName,\n              updatedFileName: fileName,\n              outputFormat\n            }}\n            past={original}\n            current={last}\n          />\n        </>\n      )}\n\n      {open && <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        open={open}\n        key={\"snacks\"}\n        autoHideDuration={3000}\n        onClose={() => handleState(false)}\n      >\n        <Alert onClose={() => handleState(false, \"\", \"\")} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { className } from \"../function\";\nimport \"../styles/main.css\";\n\nexport default function Error({ darkState }) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      color: darkState ? \"#ffffff\" : \"#343a40\",\n      textShadow: `3px 3px 2px ${darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"}`\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"text-center\">\n      <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>404</h1>\n      <Typography paragraph variant=\"h5\" color=\"textSecondary\">\n      We are sorry but we could not find the page you are looking.\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\nimport {\n  CssBaseline\n} from \"@material-ui/core\";\nimport {\n  Info\n} from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  useTheme,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\nimport {\n  Package,\n  Error\n} from \"./page\";\nimport \"./styles/main.css\";\nimport \"./App.css\";\n\nfunction App(props) {\n  let location = useLocation();\n  let pathname = location.pathname.replace(\"/\", \"\");\n  if (pathname === \"\") pathname = \"package\";\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\"\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  }));\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        main: blue[500]\n      },\n      secondary: {\n        main: blue[300]\n      }\n    }\n  });\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const routeObj = [\n    { path: \"/\", obj: <Package/> },\n    { path: \"package\", obj: <Package/> },\n  ];\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.root}>\n        <main className={classes.content}>\n          <Switch>\n            {routeObj.map(({ path, obj }, key) => (\n              <Route exact path={`/${path}`} component={() => obj} key={key} />\n            ))}\n            <Route component={() => <Error/>} />\n          </Switch>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nApp.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  //wind: PropTypes.func\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  HashRouter,\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}